<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.searchisko</groupId>
        <artifactId>parent</artifactId>
        <relativePath>../pom.xml</relativePath>
        <version>1.0.Beta-01</version>
    </parent>

    <artifactId>api</artifactId>
    <packaging>war</packaging>
    <version>1.0.Beta-01</version>

    <properties>
        <compileSource>1.7</compileSource>
    </properties>

    <dependencies>
        <!-- First declare the APIs we depend on and need for compilation. All of them are provided by JBoss AS 7 -->

        <!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>javax.enterprise</groupId>
            <artifactId>cdi-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.annotation</groupId>
            <artifactId>jboss-annotations-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JPA API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the EJB API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.ejb</groupId>
            <artifactId>jboss-ejb-api_3.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the Servlet API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.0_spec</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- JSR-303 (Bean Validation) Implementation -->
        <!-- Provides portable constraints such as @Email -->
        <!-- Hibernate Validator is shipped in JBoss AS 7 -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- Import the JSF API, we use provided scope as the API is included in JBoss AS 7 -->
        <dependency>
            <groupId>org.jboss.spec.javax.faces</groupId>
            <artifactId>jboss-jsf-api_2.1_spec</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.spec.javax.el</groupId>
            <artifactId>jboss-el-api_2.2_spec</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- Artifacts needed by application -->
        <!-- Needed for PreProcessInterceptor -->
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
            <!-- Excluded because of dependency in elasticsearch-river-jira -->
            <exclusions>
                <exclusion>
                    <artifactId>httpcore</artifactId>
                    <groupId>org.apache.httpcomponents</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>httpclient</artifactId>
                    <groupId>org.apache.httpcomponents</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Resteasy using common-codes (as module) which is needed by app as well. Therefore there is no need to add dependency
            on common-codecs. Only dependency is defined in Manifest - see bellow. -->

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-cdi</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-atom-provider</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jackson-provider</artifactId>
            <version>${resteasy.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Needed for DigestUtils but it's bundled in httpclient anyway -->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.6</version>
        </dependency>

        <dependency>
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch</artifactId>
            <version>${org.elasticsearch.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.sun.jmx</groupId>
                    <artifactId>jmxri</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jdmk</groupId>
                    <artifactId>jmxtools</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.jms</groupId>
                    <artifactId>jms</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.mail</groupId>
                    <artifactId>mail</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.jboss.elasticsearch</groupId>
            <artifactId>structured-content-tools</artifactId>
            <version>${structured-content-tools.version}</version>
        </dependency>

        <!-- Needed for JSON parsing -->
        <!-- Consider using bundled jackson in EAP -->
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-core-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-jaxrs</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <!-- Unit test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.1</version>
            <scope>test</scope>
        </dependency>

        <!-- dependencies necessary for JPA code unit tests -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.3.170</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>ROOT</finalName>
        <resources>
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>
            <!-- Prepare exploded WAR content so that we can replace tokens in html files during prepare-package phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.1.1</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestEntries>
                            <Build-Time>${buildNumber}</Build-Time>
                            <Dependencies>
                                org.jboss.resteasy.resteasy-jaxrs,
                                org.jboss.resteasy.resteasy-cdi,
                                org.apache.commons.codec
                            </Dependencies>
                        </manifestEntries>
                    </archive>
                    <outputDirectory>${project.parent.basedir}/deployments</outputDirectory>
                    <warName>ROOT</warName>
                    <attachClasses>true</attachClasses>
                    <webResources>
                        <resource>
                            <directory>${basedir}/src/main/webapp/WEB-INF</directory>
                            <filtering>true</filtering>
                            <targetPath>WEB-INF</targetPath>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>1.1</version>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <doCheck>false</doCheck>
                    <doUpdate>false</doUpdate>
                    <format>{0,date,yyyy-MM-dd HH:mm:ss}</format>
                    <items>
                        <item>timestamp</item>
                    </items>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.14</version>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>java.util.logging.config.file</name>
                            <value>src/test/resources/logging.properties</value>
                        </property>
                    </systemProperties>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <reportPlugins>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-project-info-reports-plugin</artifactId>
                            <version>2.5</version>
                            <configuration>
                                <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-surefire-report-plugin</artifactId>
                            <version>2.14</version>
                            <!-- See http://jira.codehaus.org/browse/SUREFIRE-257 -->
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>report-only</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-jxr-plugin</artifactId>
                            <version>2.3</version>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <version>2.9</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>cobertura-maven-plugin</artifactId>
                            <version>2.5.2</version>
                        </plugin>
                        <plugin>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>taglist-maven-plugin</artifactId>
                            <version>2.4</version>
                        </plugin>
                    </reportPlugins>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <!-- local development on localhost -->
            <id>localhost</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <es.client.embedded.data.path>${env.PWD}/.dcp_data</es.client.embedded.data.path>
                <persistence.xml.jta-data-source>java:jboss/datasources/SearchiskoDS</persistence.xml.jta-data-source>
                <persistence.xml.hibernate.dialect>org.hibernate.dialect.H2Dialect</persistence.xml.hibernate.dialect>
                <datasource.connection.url>jdbc:h2:mem:searchisko;DB_CLOSE_DELAY=-1</datasource.connection.url>
                <datasource.driver>h2</datasource.driver>
                <datasource.username>sa</datasource.username>
                <datasource.password>sa</datasource.password>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.elasticsearch</groupId>
                    <artifactId>elasticsearch-river-jira</artifactId>
                    <version>${elasticsearch-river-jira.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.elasticsearch</groupId>
                    <artifactId>elasticsearch-river-remote</artifactId>
                    <version>${elasticsearch-river-remote.version}</version>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/profiles/localhost</directory>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <id>skiptests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <version>2.14</version>
                        <configuration>
                            <skipTests>true</skipTests>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>production</id>
            <!-- TODO: I think we need to flesh this one out a bit more -->
            <build>
                <resources>
                    <resource>
                        <directory>src/main/profiles/production</directory>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <!-- development on RHEL6 based dev machine with standard installation of jboss EAP bundle -->
            <id>rhel6-dev</id>
            <properties>
                <es.client.embedded.data.path>/var/lib/jbossas/standalone/.dcp_data</es.client.embedded.data.path>
                <persistence.xml.jta-data-source>java:jboss/datasources/SearchiskoDS</persistence.xml.jta-data-source>
                <persistence.xml.hibernate.dialect>org.hibernate.dialect.H2Dialect</persistence.xml.hibernate.dialect>
                <datasource.connection.url>jdbc:h2:mem:searchisko;DB_CLOSE_DELAY=-1</datasource.connection.url>
                <datasource.driver>h2</datasource.driver>
                <datasource.username>sa</datasource.username>
                <datasource.password>sa</datasource.password>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.elasticsearch</groupId>
                    <artifactId>elasticsearch-river-jira</artifactId>
                    <version>${elasticsearch-river-jira.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.elasticsearch</groupId>
                    <artifactId>elasticsearch-river-remote</artifactId>
                    <version>${elasticsearch-river-remote.version}</version>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/profiles/localhost</directory>
                    </resource>
                </resources>
            </build>
        </profile>
        <profile>
            <!-- When built in OpenShift the openshift profile will be used when invoking mvn. -->
            <!-- Use this profile for any OpenShift specific customization your app will need. -->
            <!-- By default that is to put the resulting archive into the deployments folder. -->
            <!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
            <id>openshift</id>
            <properties>
                <es.client.embedded.data.path>${env.OPENSHIFT_DATA_DIR}</es.client.embedded.data.path>
                <es.network.host>${env.OPENSHIFT_INTERNAL_IP}</es.network.host>
                <persistence.xml.jta-data-source>java:jboss/datasources/SearchiskoDS</persistence.xml.jta-data-source>
                <persistence.xml.hibernate.dialect>org.hibernate.dialect.MySQLDialect</persistence.xml.hibernate.dialect>
                <datasource.connection.url>jdbc:mysql://${env.OPENSHIFT_MYSQL_DB_HOST}:${env.OPENSHIFT_MYSQL_DB_PORT}</datasource.connection.url>
                <datasource.driver>mysql</datasource.driver>
                <datasource.username>${env.OPENSHIFT_MYSQL_DB_USERNAME}</datasource.username>
                <datasource.password>${env.OPENSHIFT_MYSQL_DB_PASSWORD}</datasource.password>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.elasticsearch</groupId>
                    <artifactId>elasticsearch-river-jira</artifactId>
                    <version>${elasticsearch-river-jira.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.jboss.elasticsearch</groupId>
                    <artifactId>elasticsearch-river-remote</artifactId>
                    <version>${elasticsearch-river-remote.version}</version>
                </dependency>
            </dependencies>
            <build>
                <resources>
                    <resource>
                        <filtering>true</filtering>
                        <directory>src/main/profiles/openshift</directory>
                    </resource>
                </resources>
            </build>
        </profile>
    </profiles>
</project>
